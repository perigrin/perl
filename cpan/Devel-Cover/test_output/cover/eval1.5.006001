Reading database from ...


------------------------------------------ ------ ------ ------ ------ ------
File                                         stmt   bran   cond    sub  total
------------------------------------------ ------ ------ ------ ------ ------
tests/eval1                                  94.1    n/a    n/a   75.0   90.5
Total                                        94.1    n/a    n/a   75.0   90.5
------------------------------------------ ------ ------ ------ ------ ------


Run: ...
Perl version: ...
OS: ...
Start: ...
Finish: ...

tests/eval1

line  err   stmt   bran   cond    sub   code
1                                       #!/usr/bin/perl
2                                       
3                                       # Copyright 2002-2011, Paul Johnson (pjcj@cpan.org)
4                                       
5                                       # This software is free.  It is licensed under the same terms as Perl itself.
6                                       
7                                       # The latest version of this software should be available from my homepage:
8                                       # http://www.pjcj.net
9                                       
10                                      # __COVER__ skip_test $] == 5.010
11                                      # __COVER__ skip_reason One test fails only under make test on 5.10.0 unhreaded
12                                      
13                                      use strict;
14                                      use warnings;
15                                      
16                                      use lib -d "t" ? "t" : "..";
17                                      
18             1                        my $x;
19                                      
20             1                    3   eval <<'EOS';
               3                        
               3                        
21                                      sub e
22                                      {
23                                          $x++;
24                                          $x
25                                      }
26                                      EOS
27                                      
28             1                    2   eval <<'EOS';
      ***      2                    0   
               2                    3   
      ***      0                        
               3                        
29                                      sub f
30                                      {
31                                          $x++;
32                                          $x
33                                      }
34                                      
35                                      sub g
36                                      {
37                                          $x++;
38                                      }
39                                      
40                                      sub h
41                                      {
42                                          $x++;
43                                      }
44                                      EOS
45                                      
46             1                        e();
47             1                        e();
48             1                        e();
49             1                        f();
50             1                        f();
51             1                        h();
52             1                        h();
53             1                        h();


Covered Subroutines
-------------------

Subroutine Count Location      
---------- ----- --------------
e              3 tests/eval1:20
f              2 tests/eval1:28
h              3 tests/eval1:28

Uncovered Subroutines
---------------------

Subroutine Count Location      
---------- ----- --------------
g              0 tests/eval1:28


